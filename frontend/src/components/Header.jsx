import React, { useState, useEffect } from 'react';
import { Link, useLocation } from 'react-router-dom';
import '../styles/components/Header.css';

const Header = ({ cartCount = 0, isAuthenticated = false, onLogout }) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [isScrolled, setIsScrolled] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
  const [isSearchFocused, setIsSearchFocused] = useState(false);
  const location = useLocation();

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª—è —Ö–µ–¥–µ—Ä–∞
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 50);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ—É—Ç–∞
  useEffect(() => {
    setIsMenuOpen(false);
  }, [location]);

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  const handleSearch = (e) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      console.log('–ü–æ–∏—Å–∫:', searchQuery);
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞
    }
  };

  // –£–±–∏—Ä–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é
  const navItems = [
    { path: '/', label: 'üè† –ì–æ–ª–æ–≤–Ω–∞', exact: true },
    { path: '/catalog', label: 'üåô –ö–∞—Ç–∞–ª–æ–≥' }
  ];

  const isActive = (path, exact = false) => {
    if (exact) {
      return location.pathname === path;
    }
    return location.pathname.startsWith(path);
  };

  return (
    <header className={`header ${isScrolled ? 'scrolled' : ''}`}>
      <div className="header-container">
        {/* –ü–†–ï–ú–ò–ê–õ–¨–ù–´–ô –õ–û–ì–û–¢–ò–ü */}
        <Link to="/" className="header-logo">
          <div className="logo-container">
            <span className="logo-icon">üåô</span>
            <div className="logo-text-container">
              <span className="logo-text">BloomShine</span>
              <span className="logo-subtitle">–ê—Ä–æ–º–∞—Ç–∏—á–Ω—ñ –±–æ–∫—Å–∏</span>
            </div>
          </div>
        </Link>

        {/* –ù–ê–í–ò–ì–ê–¶–ò–Ø */}
        <nav className="header-nav">
          <ul className="nav-menu">
            {navItems.map((item) => (
              <li key={item.path} className="nav-item">
                <Link 
                  to={item.path} 
                  className={`nav-link ${isActive(item.path, item.exact) ? 'active' : ''}`}
                >
                  {item.label}
                </Link>
              </li>
            ))}
          </ul>
        </nav>

        {/* –ü–û–ò–°–ö */}
        <div className={`header-search ${isSearchFocused ? 'focused' : ''}`}>
          <form onSubmit={handleSearch} className="search-form">
            <input 
              type="text"
              placeholder="üîç –ü–æ—à—É–∫ –∞—Ä–æ–º–∞—Ç–∏—á–Ω–∏—Ö –±–æ–∫—Å—ñ–≤..."
              className="search-input"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              onFocus={() => setIsSearchFocused(true)}
              onBlur={() => setIsSearchFocused(false)}
            />
            <button type="submit" className="search-button">
              <span>üîç</span>
            </button>
          </form>
        </div>

        {/* –î–ï–ô–°–¢–í–ò–Ø */}
        <div className="header-actions">
          {/* –ò–∑–±—Ä–∞–Ω–Ω–æ–µ */}
          <Link to="/wishlist" className="action-button" title="–°–ø–∏—Å–æ–∫ –±–∞–∂–∞–Ω—å">
            <span>ü§ç</span>
          </Link>

          {/* –ü—Ä–æ—Ñ–∏–ª—å/–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è */}
          {isAuthenticated ? (
            <div className="user-menu">
              <div className="user-avatar" title="–ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞">
                <span>üë§</span>
              </div>
              <div className="user-dropdown">
                <div className="user-info">
                  <div className="user-name">–Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</div>
                  <div className="user-email">user@example.com</div>
                </div>
                <Link to="/profile" className="dropdown-item">
                  <span>üë§</span> –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å
                </Link>
                <Link to="/orders" className="dropdown-item">
                  <span>üì¶</span> –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
                </Link>
                <Link to="/wishlist" className="dropdown-item">
                  <span>ü§ç</span> –°–ø–∏—Å–æ–∫ –±–∞–∂–∞–Ω—å
                </Link>
                <hr className="dropdown-divider" />
                <button onClick={onLogout} className="dropdown-item logout">
                  <span>üö™</span> –í–∏–π—Ç–∏
                </button>
              </div>
            </div>
          ) : (
            <Link to="/auth" className="action-button" title="–£–≤—ñ–π—Ç–∏">
              <span>üîê</span>
            </Link>
          )}

          {/* –ö–æ—Ä–∑–∏–Ω–∞ */}
          <Link to="/cart" className="action-button cart-button" title="–ö–æ—à–∏–∫">
            <span>üõí</span>
            {cartCount > 0 && (
              <span className="cart-badge">{cartCount}</span>
            )}
          </Link>

          {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
          <button 
            className={`mobile-menu-button ${isMenuOpen ? 'active' : ''}`}
            onClick={toggleMenu}
            aria-label="–ú–µ–Ω—é"
          >
            <span className="hamburger-line"></span>
            <span className="hamburger-line"></span>
            <span className="hamburger-line"></span>
          </button>
        </div>
      </div>

      {/* –ú–û–ë–ò–õ–¨–ù–û–ï –ú–ï–ù–Æ */}
      <div className={`mobile-menu ${isMenuOpen ? 'active' : ''}`}>
        <div className="mobile-search">
          <form onSubmit={handleSearch} className="search-form">
            <input 
              type="text"
              placeholder="üîç –ü–æ—à—É–∫..."
              className="search-input"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
            />
          </form>
        </div>

        <nav className="mobile-nav">
          {navItems.map((item) => (
            <div key={item.path} className="mobile-nav-item">
              <Link 
                to={item.path} 
                className={`mobile-nav-link ${isActive(item.path, item.exact) ? 'active' : ''}`}
                onClick={() => setIsMenuOpen(false)}
              >
                {item.label}
              </Link>
            </div>
          ))}
        </nav>

        <div className="mobile-actions">
          {!isAuthenticated ? (
            <Link to="/auth" className="mobile-action-button">
              üîê –£–≤—ñ–π—Ç–∏ / –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
            </Link>
          ) : (
            <>
              <Link to="/profile" className="mobile-action-button">
                üë§ –ü—Ä–æ—Ñ—ñ–ª—å
              </Link>
              <Link to="/orders" className="mobile-action-button">
                üì¶ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è
              </Link>
            </>
          )}
          
          <Link to="/wishlist" className="mobile-action-button">
            ü§ç –°–ø–∏—Å–æ–∫ –±–∞–∂–∞–Ω—å
          </Link>
          
          <Link to="/cart" className="mobile-action-button">
            üõí –ö–æ—à–∏–∫ {cartCount > 0 && `(${cartCount})`}
          </Link>
        </div>
      </div>
    </header>
  );
};

export default Header;