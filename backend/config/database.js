const fs = require('fs');
const path = require('path');

// ะกะพะทะดะฐะตะผ ะฟะฐะฟะบั data ะตัะปะธ ะตั ะฝะตั
const DATA_DIR = path.join(__dirname, '../data');
if (!fs.existsSync(DATA_DIR)) {
  fs.mkdirSync(DATA_DIR, { recursive: true });
}

// JSON ะฑะฐะทั ะดะฐะฝะฝัั
const jsonDB = {
  users: path.join(DATA_DIR, 'users.json'),
  products: path.join(DATA_DIR, 'products.json'),
  orders: path.join(DATA_DIR, 'orders.json')
};

// ะกะพะทะดะฐะตะผ ัะฐะนะปั ะตัะปะธ ะธั ะฝะตั
Object.values(jsonDB).forEach(file => {
  if (!fs.existsSync(file)) {
    fs.writeFileSync(file, '[]');
  }
});

// ะคัะฝะบัะธะธ ะดะปั ัะฐะฑะพัั ั JSON
const readData = (collection) => {
  try {
    const data = fs.readFileSync(jsonDB[collection], 'utf8');
    return JSON.parse(data);
  } catch (error) {
    console.error(`ะัะธะฑะบะฐ ััะตะฝะธั ${collection}:`, error);
    return [];
  }
};

const writeData = (collection, data) => {
  try {
    fs.writeFileSync(jsonDB[collection], JSON.stringify(data, null, 2));
    return true;
  } catch (error) {
    console.error(`ะัะธะฑะบะฐ ะทะฐะฟะธัะธ ${collection}:`, error);
    return false;
  }
};

// ะคัะฝะบัะธั ะฟะพะดะบะปััะตะฝะธั ะบ JSON ะะ
const connectDB = () => {
  try {
    console.log('๐ ========================================');
    console.log('๐๏ธ ะัะฟะพะปัะทัะตััั JSON ัะฐะนะปะพะฒะฐั ัะธััะตะผะฐ');
    console.log('๐ ========================================');
    console.log(`๐ ะะฐะฝะฝัะต ััะฐะฝัััั ะฒ: ${DATA_DIR}`);
    console.log(`๐ค ะะพะปัะทะพะฒะฐัะตะปะธ: users.json`);
    console.log(`๐ฆ ะขะพะฒะฐัั: products.json`);
    console.log(`๐ ะะฐะบะฐะทั: orders.json`);
    console.log('๐ ========================================');
  } catch (error) {
    console.error('โ ะัะธะฑะบะฐ ะธะฝะธัะธะฐะปะธะทะฐัะธะธ JSON ะะ:', error);
    process.exit(1);
  }
};

module.exports = {
  connectDB,
  readData,
  writeData
};
// ะะพะฑะฐะฒััะต ััั ัััะพะบั ะดะปั ัะพะฒะผะตััะธะผะพััะธ
module.exports.default = connectDB;